# main_screen.kv
#
# Greaseweazle GUI Wrapper
#
# Copyright (c) 2019 Don Mankin <don.mankin@yahoo.com>
#
# MIT License
#
# See the file LICENSE for more details, or visit <https://opensource.org/licenses/MIT>.

#: import Button kivy.uix.button.Button

<MainScreen>:

    TabbedPanel:

        # variable in py file: variable in ky file

        # read from disk
        txtCommandLineRFD: txtCommandLineRFD
        chkRevsPerTrack: chkRevsPerTrack
        txtRevsPerTrack: txtRevsPerTrack
        chkCylSetsRFD: chkCylSetsRFD
        txtCylSetsRFD: txtCylSetsRFD
        chkHeadSetsRFD: chkHeadSetsRFD
        txtHeadSetsRFD: txtHeadSetsRFD
        chkSelectDriveRFD: chkSelectDriveRFD
        tglUseExeRFD: tglUseExeRFD
        tglSingleSidedLegacyRFD: tglSingleSidedLegacyRFD
        chkDoubleStepRFD: chkDoubleStepRFD
        txtDoubleStepRFD: txtDoubleStepRFD
        chkRateRFD: chkRateRFD
        txtRateRFD: txtRateRFD
        chkRateRFD: chkRateRFD
        tglFlippyTeacRFD: tglFlippyTeacRFD
        tglFlippyPanasonicRFD: tglFlippyPanasonicRFD
        txtRpmRFD: txtRpmRFD

        # write to disk
        txtCommandLineWTD: txtCommandLineWTD
        chkDoubleStepWTD: chkDoubleStepWTD
        txtDoubleStepWTD: txtDoubleStepWTD
        chkEraseEmptyWTD: chkEraseEmptyWTD
        chkCylSetsWTD: chkCylSetsWTD
        txtCylSetsWTD: txtCylSetsWTD
        chkHeadSetsWTD: chkHeadSetsWTD
        txtHeadSetsWTD: txtHeadSetsWTD
        txtSelectDriveWTD: txtSelectDriveWTD
        tglUseExeWTD: tglUseExeWTD
        tglFlippyTeacWTD: tglFlippyTeacWTD
        tglFlippyPanasonicWTD: tglFlippyPanasonicWTD

         # erase disk
        txtCommandLineErase: txtCommandLineErase
        chkCylSetsErase: chkCylSetsErase
        txtCylSetsErase: txtCylSetsErase
        chkHeadSetsErase: chkHeadSetsErase
        txtHeadSetsErase: txtHeadSetsErase
        txtSelectDriveErase: txtSelectDriveErase
        tglUseExeErase: tglUseExeErase
        tglFlippyTeacErase: tglFlippyTeacErase
        tglFlippyPanasonicErase: tglFlippyPanasonicErase

        # set delays
        txtCommandLineDelays: txtCommandLineDelays
        chkDelayAfterSelect: chkDelayAfterSelect
        txtDelayAfterSelect: txtDelayAfterSelect
        chkDelayBetweenSteps: chkDelayBetweenSteps
        txtDelayBetweenSteps: txtDelayBetweenSteps
        chkSettleDelayAfterSeek: chkSettleDelayAfterSeek
        txtSettleDelayAfterSeek: txtSettleDelayAfterSeek
        chkDelayUntilAutoDeselect: chkDelayUntilAutoDeselect
        txtDelayUntilAutoDeselect: txtDelayUntilAutoDeselect
        tglUseExeDelays: tglUseExeDelays

        # update firmware
        txtCommandLineFirmware: txtCommandLineFirmware
        tglBootloader: tglBootloader
        tglUseExeFW: tglUseExeFW

        # seek cylinder
        txtSeekCyl: txtSeekCyl
        txtCommandLineSeekCyl: txtCommandLineSeekCyl
        chkSelectDriveSeekCyl: chkSelectDriveSeekCyl
        txtSelectDriveSeekCyl: txtSelectDriveSeekCyl
        tglUseExeSeekCyl: tglUseExeSeekCyl

        # pin level
        txtPinLevel: txtPinLevel
        chkHighLevel: chkHighLevel
        chkLowLevel: chkLowLevel
        txtCommandLinePinLevel: txtCommandLinePinLevel
        tglUseExePinLevel: tglUseExePinLevel

        # reset
        txtCommandLineReset: txtCommandLineReset
        tglUseExeReset: tglUseExeReset

        # bandwidth
        txtCommandLineBandwidth: txtCommandLineBandwidth
        tglUseExeBandwidth: tglUseExeBandwidth

        # info
        txtCommandLineInfo: txtCommandLineInfo
        tglUseExeInfo: tglUseExeInfo
        tglInfoBootloader: tglInfoBootloader

        # creating the size
        # and the alignment of the tab
        size_hint: 1, 1
        pos_hint: {'center_x': .5, 'center_y': .5}

        do_default_tab: False
        tab_width: self.width / 11

        # READ FROM DISK
        FocusTabbedPanelItem:
            text: ' Read Disk '
            on_focus: if self.focus: root.got_focus_read_from_disk()
            BoxLayout:
                orientation: "vertical"
                TextInput:
                    id: txtCommandLineRFD
                    size_hint: 1,0.5
                    text: "python. gw.py read '/home/user/mydisk.scp'"
                GridLayout:
                    rows: 7
                    cols: 3
                    padding: 10
                    spacing: 10
                    CheckBox:
                        id: chkDoubleStepRFD
                        on_release: root.build_read_from_disk()
                    Label:
                        text: "Double-Step"
                        text_size: self.size
                        halign: "left"
                        valign: 'middle'
                    TextInput:
                        id: txtDoubleStepRFD
                        text: "1"
                        on_text: root.build_read_from_disk()
                        disabled: not chkDoubleStepRFD.active
                    CheckBox:
                        id: chkRevsPerTrack
                        on_release: root.build_read_from_disk()
                    Label:
                        text: "Revs to read per track"
                        text_size: self.size
                        halign: "left"
                        valign: 'middle'
                    TextInput:
                        id: txtRevsPerTrack
                        text: "3"
                        on_text: root.build_read_from_disk()
                        disabled: not chkRevsPerTrack.active
                    CheckBox:
                        id: chkCylSetsRFD
                        on_release: root.build_read_from_disk()
                    Label:
                        text: "Cylinder sets"
                        text_size: self.size
                        halign: "left"
                        valign: 'middle'
                    TextInput:
                        id: txtCylSetsRFD
                        text: "0-34,35-79"
                        on_text: root.build_read_from_disk()
                        disabled: not chkCylSetsRFD.active
                    CheckBox:
                        id: chkHeadSetsRFD
                        on_release: root.build_read_from_disk()
                    Label:
                        text: "Head sets"
                        text_size: self.size
                        halign: "left"
                        valign: 'middle'
                    TextInput:
                        id: txtHeadSetsRFD
                        text: "0,1"
                        on_text: root.build_read_from_disk()
                        disabled: not chkHeadSetsRFD.active
                    CheckBox:
                        id: chkSelectDriveRFD
                        on_release: root.build_read_from_disk()
                    Label:
                        text: "F7 Select Drive"
                        text_size: self.size
                        halign: "left"
                        valign: 'middle'
                    TextInput:
                        id: txtSelectDriveRFD
                        text: "0"
                        on_text: root.build_read_from_disk()
                        disabled: not chkSelectDriveRFD.active
                    CheckBox:
                        id: chkRateRFD
                        on_release: root.build_read_from_disk()
                    Label:
                        text: "Rate (kbit/s)"
                        text_size: self.size
                        halign: "left"
                        valign: 'middle'
                    TextInput:
                        id: txtRateRFD
                        text: "250"
                        on_text: root.build_read_from_disk()
                        disabled: not chkRateRFD.active
                    CheckBox:
                        id: chkRpmRFD
                        on_release: root.build_read_from_disk()
                    Label:
                        text: "RPM"
                        text_size: self.size
                        halign: "left"
                        valign: 'middle'
                    TextInput:
                        id: txtRpmRFD
                        text: "300"
                        on_text: root.build_read_from_disk()
                        disabled: not chkRpmRFD.active
                GridLayout:
                    rows: 1
                    cols: 6
                    padding: 10
                    spacing: 10
                    size_hint: 1,0.3
                    ToggleButton:
                        id: tglUseExeRFD
                        text: "Use EXE"
                        state: "normal"
                        on_release: root.build_read_from_disk()
                    ToggleButton:
                        id: tglFlippyTeacRFD
                        text: "Flippy\nTeac"
                        state: "normal"
                        on_release:
                            tglFlippyPanasonicRFD.active = False
                            tglFlippyPanasonicRFD.state = "normal"
                            root.build_read_from_disk()
                    ToggleButton:
                        id: tglFlippyPanasonicRFD
                        text: "Flippy\nPanasonic"
                        state: "normal"
                        on_release:
                            tglFlippyTeacRFD.active = False
                            tglFlippyTeacRFD.state = "normal"
                            root.build_read_from_disk()
                    ToggleButton:
                        id: tglSingleSidedLegacyRFD
                        text: "Legacy"
                        state:
                            "normal" if txtHeadSetsRFD.text == "0" else "normal"
                        disabled:
                            False if (chkHeadSetsRFD.state == "down") and (txtHeadSetsRFD.text == "0") else True
                        on_release: root.build_read_from_disk()
                    Button:
                        id: btnSelectFolderRFD
                        text: "Select Folder"
                        on_release:
                            app.root.ids['screen_manager'].current = 'folder_dialog_screen'
                            app.root.ids['screen_manager'].current_screen.set_dialog_mode(0)
                    Button:
                        id: btnSelectFileRFD
                        text: "Select File"
                        on_release:
                            app.root.ids['screen_manager'].current = 'file_dialog_screen'
                            app.root.ids['screen_manager'].current_screen.set_dialog_mode(0)
                Button:
                    id: btnLaunchRFD
                    size_hint:1, 0.2
                    text: "Launch"
                    on_release: root.process_read_from_disk()

        # WRITE TO DISK
        FocusTabbedPanelItem:
            text: ' Write Disk '
            on_focus: if self.focus: root.got_focus_write_to_disk()
            BoxLayout:
                orientation: "vertical"
                TextInput:
                    id:txtCommandLineWTD
                    size_hint: 1,0.5
                    text: "python gw.py write --scyl=0 --ecyl=79 --adjust-speed '/home/user/mydisk.scp' COM11"
                GridLayout:
                    rows: 5
                    cols: 3
                    padding: 10
                    spacing: 10
                    CheckBox:
                        id: chkEraseEmptyWTD
                        on_release: root.build_write_to_disk()
                    Label:
                        text: "Erase Empty"
                        text_size: self.size
                        halign: "left"
                        valign: 'middle'
                    Label:
                        text: " "
                    CheckBox:
                        id: chkDoubleStepWTD
                        on_release: root.build_write_to_disk()
                    Label:
                        text: "Double Step"
                        text_size: self.size
                        halign: "left"
                        valign: 'middle'
                    TextInput:
                        id: txtDoubleStepWTD
                        text: "1"
                        on_text: root.build_write_to_disk()
                        disabled: not chkDoubleStepWTD.active
                    CheckBox:
                        id: chkCylSetsWTD
                        on_release: root.build_write_to_disk()
                    Label:
                        text: "Cylinder sets"
                        text_size: self.size
                        halign: "left"
                        valign: 'middle'
                    TextInput:
                        id: txtCylSetsWTD
                        text: "0-34,35-79"
                        disabled: not chkCylSetsWTD.active
                        on_text: root.build_write_to_disk()
                    CheckBox:
                        id: chkHeadSetsWTD
                        on_release: root.build_write_to_disk()
                    Label:
                        text: "Head sets"
                        text_size: self.size
                        halign: "left"
                        valign: 'middle'
                    TextInput:
                        id: txtHeadSetsWTD
                        text: "0,1"
                        disabled: not chkHeadSetsWTD.active
                        on_text: root.build_write_to_disk()
                    CheckBox:
                        id: chkSelectDriveWTD
                        on_release: root.build_write_to_disk()
                    Label:
                        text: "F7 Select Drive"
                        text_size: self.size
                        halign: "left"
                        valign: 'middle'
                    TextInput:
                        id: txtSelectDriveWTD
                        text: "0"
                        on_text: root.build_write_to_disk()
                        disabled: not chkSelectDriveWTD.active
                GridLayout:
                    rows: 1
                    cols: 4
                    padding: 10
                    spacing: 10
                    size_hint: 1,0.3
                    ToggleButton:
                        id: tglUseExeWTD
                        text: "Use EXE"
                        state: "normal"
                        on_release: root.build_write_to_disk()
                    ToggleButton:
                        id: tglFlippyTeacWTD
                        text: "Flippy\nTeac"
                        state: "normal"
                        on_release:
                            tglFlippyPanasonicWTD.active = False
                            tglFlippyPanasonicWTD.state = "normal"
                            root.build_write_to_disk()
                    ToggleButton:
                        id: tglFlippyPanasonicWTD
                        text: "Flippy\nPanasonic"
                        state: "normal"
                        on_release:
                            tglFlippyTeacWTD.active = False
                            tglFlippyTeacWTD.state = "normal"
                            root.build_write_to_disk()
                    Button:
                        id: btnSelectFileWTD
                        text: "Select File"
                        on_release:
                            app.root.ids['screen_manager'].current = 'file_dialog_screen'
                            app.root.ids['screen_manager'].current_screen.set_dialog_mode(1)
                Button:
                    id: btnLaunchWTD
                    size_hint: 1,0.2
                    text: "Launch"
                    on_release: root.process_write_to_disk()


        # ERASE DISK
        FocusTabbedPanelItem:
            text: ' Erase Disk '
            on_focus: if self.focus: root.got_focus_erase_disk()
            BoxLayout:
                orientation: "vertical"
                TextInput:
                    id:txtCommandLineErase
                    size_hint: 1,0.5
                    text: "python gw.py erase '/home/user/mydisk.scp'"
                GridLayout:
                    rows: 3
                    cols: 3
                    padding: 10
                    spacing: 10
                    CheckBox:
                        id: chkCylSetsErase
                        on_release: root.build_erase_disk()
                    Label:
                        text: "Cylinder set to erase"
                        text_size: self.size
                        halign: "left"
                        valign: 'middle'
                    TextInput:
                        id: txtCylSetsErase
                        text: "0-34,35-79"
                        disabled: not chkCylSetsErase.active
                        on_text: root.build_erase_disk()
                    CheckBox:
                        id: chkHeadSetsErase
                        on_release: root.build_erase_disk()
                    Label:
                        text: "Head sets to erase"
                        text_size: self.size
                        halign: "left"
                        valign: 'middle'
                    TextInput:
                        id: txtHeadSetsErase
                        text: "0,1"
                        disabled: not chkHeadSetsErase.active
                        on_text: root.build_erase_disk()
                    CheckBox:
                        id: chkSelectDriveErase
                        on_release: root.build_erase_disk()
                    Label:
                        text: "F7 Select Drive"
                        text_size: self.size
                        halign: "left"
                        valign: 'middle'
                    TextInput:
                        id: txtSelectDriveErase
                        text: "0"
                        on_text: root.build_erase_disk()
                        disabled: not chkSelectDriveErase.active
                GridLayout:
                    rows: 1
                    cols: 3
                    padding: 10
                    spacing: 10
                    size_hint: 1,0.3
                    ToggleButton:
                        id: tglUseExeErase
                        text: "Use EXE"
                        state: "normal"
                        on_release: root.build_erase_disk()

                    ToggleButton:
                        id: tglFlippyTeacErase
                        text: "Flippy\nTeac"
                        state: "normal"
                        on_release:
                            tglFlippyPanasonicErase.active = False
                            tglFlippyPanasonicErase.state = "normal"
                            root.build_erase_disk()
                    ToggleButton:
                        id: tglFlippyPanasonicErase
                        text: "Flippy\nPanasonic"
                        state: "normal"
                        on_release:
                            tglFlippyTeacErase.active = False
                            tglFlippyTeacErase.state = "normal"
                            root.build_erase_disk()
                Button:
                    id: btnLaunchErase
                    size_hint: 1,0.2
                    text: "Launch"
                    on_release: root.process_erase_disk()


        # SET DELAYS
        FocusTabbedPanelItem:
            text: ' Set Delays '
            on_focus: if self.focus: root.got_focus_set_delays()
            BoxLayout:
                orientation: "vertical"
                TextInput:
                    id:txtCommandLineDelays
                    size_hint: 1,0.5
                    text: "python gw.py delays --step=12000 COM11"
                GridLayout:
                    id: grdSetDelays
                    rows: 5
                    cols: 3
                    padding: 10
                    spacing: 10
                    CheckBox:
                        id: chkDelayAfterSelect
                        on_release: root.build_set_delays()
                    Label:
                        text: "Delay after drive select (usecs)"
                        text_size: self.size
                        halign: "left"
                        valign: 'middle'
                    TextInput:
                        id: txtDelayAfterSelect
                        text: "10"
                        on_text: root.build_set_delays()
                        disabled: not chkDelayAfterSelect.active
                    CheckBox:
                        id: chkDelayBetweenSteps
                        on_release: root.build_set_delays()
                    Label:
                        text: "Delay between head steps (usecs)"
                        text_size: self.size
                        halign: "left"
                        valign: 'middle'
                    TextInput:
                        id: txtDelayBetweenSteps
                        text: "3000"
                        on_text: root.build_set_delays()
                        disabled: not chkDelayBetweenSteps.active
                    CheckBox:
                        id: chkSettleDelayAfterSeek
                        on_release: root.build_set_delays()
                    Label:
                        text: "Settle delay after seek (msecs)"
                        text_size: self.size
                        halign: "left"
                        valign: 'middle'
                    TextInput:
                        id: txtSettleDelayAfterSeek
                        text: "15"
                        on_text: root.build_set_delays()
                        disabled: not chkSettleDelayAfterSeek.active
                    CheckBox:
                        id: chkDelayAfterMotorOn
                        on_release: root.build_set_delays()
                    Label:
                        text: "Delay after motor on (usecs)"
                        text_size: self.size
                        halign: "left"
                        valign: 'middle'
                    TextInput:
                        id: txtDelayAfterMotorOn
                        text: "750"
                        on_text: root.build_set_delays()
                        disabled: not chkDelayAfterMotorOn.active
                    CheckBox:
                        id: chkDelayUntilAutoDeselect
                        on_release: root.build_set_delays()
                    Label:
                        text: "Quiescent time until auto deselect (usecs)"
                        text_size: self.size
                        halign: "left"
                        valign: 'middle'
                    TextInput:
                        id: txtDelayUntilAutoDeselect
                        text: "10"
                        on_text: root.build_set_delays()
                        disabled: not chkDelayUntilAutoDeselect.active
                ToggleButton:
                    id: tglUseExeDelays
                    size_hint: 1,0.2
                    text: "Use EXE"
                    state: "normal"
                    on_release: root.build_set_delays()
                Button:
                    id: btnLaunchDelays
                    size_hint: 1,0.2
                    text: "Launch"
                    on_release: root.process_set_delays()


        # SEEK CYLINDER
        FocusTabbedPanelItem:
            text: ' Seek '
            on_focus: if self.focus: root.got_focus_seek_cyl()
            BoxLayout:
                orientation: "vertical"
                TextInput:
                    id:txtCommandLineSeekCyl
                    #size_hint: 1,0.5
                    text: "python gw.py seek --drive=A 20"
                GridLayout:
                    rows: 3
                    cols: 3
                    padding: 10
                    spacing: 10
                    Label:
                        text: " "
                        #text_size: self.size
                        halign: "left"
                        valign: 'middle'
                    Label:
                        text: "Seek cylinder"
                        #text_size: self.size
                        halign: "left"
                        valign: 'middle'
                    TextInput:
                        id: txtSeekCyl
                        text: "0"
                        on_text: root.build_seek_cyl()
                    CheckBox:
                        id: chkSelectDriveSeekCyl
                        on_release: root.build_seek_cyl()
                    Label:
                        text: "F7 Select Drive"
                        #text_size: self.size
                        halign: "left"
                        valign: 'middle'
                    TextInput:
                        id: txtSelectDriveSeekCyl
                        text: "0"
                        on_text: root.build_seek_cyl()
                        disabled: not chkSelectDriveSeekCyl.active
                ToggleButton:
                    id: tglUseExeSeekCyl
                    text: "Use EXE"
                    state: "normal"
                    on_release: root.build_seek_cyl()
                Button:
                    id: btnLaunchSeekCyl
                    #size_hint: 1,0.2
                    text: "Launch"
                    on_release: root.process_seek_cyl()


        # UPDATE FIRMWARE
        FocusTabbedPanelItem:
            text: ' Firmware '
            on_focus: if self.focus: root.got_focus_update_firmware()
            BoxLayout:
                orientation: "vertical"
                TextInput:
                    id:txtCommandLineFirmware
                    size_hint: 1,0.5
                    text: "python.exe gw.py update 'Greaseweazle-v0.7.upd' COM11"
                BoxLayout:
                    orientation: "horizontal"
                    ToggleButton:
                        id: tglUseExeFW
                        text: "Use EXE"
                        state: "normal"
                        on_release: root.build_update_firmware()
                    ToggleButton:
                        id: tglBootloader
                        text: "Bootloader"
                        state: "normal"
                        on_release: root.build_update_firmware()
                Button:
                    id: btnSelectFileFirmware
                    text: "Select File"
                    on_release:
                        app.root.ids['screen_manager'].current = 'file_update_dialog_screen'
                        app.root.ids['screen_manager'].current_screen.set_dialog_mode(2)
                Button:
                    id: btnLaunchFirmware
                    text: "Launch"
                    on_release:root.process_update_firmware()

        # PIN LEVEL
        FocusTabbedPanelItem:
            text: ' Pin Level '
            on_focus: if self.focus: root.got_focus_pin_level()
            BoxLayout:
                orientation: "vertical"
                TextInput:
                    id:txtCommandLinePinLevel
                    size_hint: 1,0.5
                    text: "python.exe gw.py pin L COM11"
                GridLayout:
                    rows: 2
                    cols: 4
                    padding: 10
                    spacing: 10
                    Label:
                        text: " "
                        text_size: self.size
                    Label:
                        text: "Selected Pin"
                        text_size: self.size
                        halign: "left"
                        valign: 'middle'
                    TextInput:
                        id:txtPinLevel
                        size_hint: 1,0.5
                        text: "22"
                        on_text:root.build_pin_level()
                    Label:
                        text: " "
                        text_size: self.size
                    CheckBox:
                        id: chkHighLevel
                        group: "PinLevel"
                        on_release: root.build_pin_level()
                    Label:
                        text: "High Level"
                        text_size: self.size
                        halign: "left"
                        valign: 'middle'
                    CheckBox:
                        id: chkLowLevel
                        group: "PinLevel"
                        on_release: root.build_pin_level()
                    Label:
                        text: "Low Level"
                        text_size: self.size
                        halign: "left"
                        valign: 'middle'
                ToggleButton:
                    id: tglUseExePinLevel
                    text: "Use EXE"
                    state: "normal"
                    on_release: root.build_pin_level()
                Button:
                    id: btnLaunchPinLevel
                    text: "Launch"
                    on_release:root.process_pin_level()

        # RESET
        FocusTabbedPanelItem:
            text: ' Reset '
            on_focus: if self.focus: root.got_focus_reset()
            BoxLayout:
                orientation: "vertical"
                TextInput:
                    id:txtCommandLineReset
                    size_hint: 1,0.5
                    text: "python.exe gw.py reset COM11"
                ToggleButton:
                    id: tglUseExeReset
                    text: "Use EXE"
                    state: "normal"
                    on_release: root.build_reset()
                Button:
                    id: btnLaunchReset
                    text: "Launch"
                    on_release:root.process_reset()

        # MEASURE BANDWIDTH
        FocusTabbedPanelItem:
            text: ' Bandwidth '
            on_focus: if self.focus: root.got_focus_bandwidth()
            BoxLayout:
                orientation: "vertical"
                TextInput:
                    id:txtCommandLineBandwidth
                    size_hint: 1,0.5
                    text: "python.exe gw.py bandwidth COM11"
                ToggleButton:
                    id: tglUseExeBandwidth
                    text: "Use EXE"
                    state: "normal"
                    on_release: root.build_bandwidth()
                Button:
                    id: btnLaunchBandwidth
                    text: "Launch"
                    on_release:root.process_bandwidth()

        # INFO ON SETUP
        FocusTabbedPanelItem:
            text: ' Info '
            on_focus: if self.focus: root.got_focus_info()
            BoxLayout:
                orientation: "vertical"
                TextInput:
                    id:txtCommandLineInfo
                    size_hint: 1,0.5
                    text: "python.exe gw.py info COM11"
                BoxLayout:
                    orientation: "horizontal"
                    ToggleButton:
                        id: tglUseExeInfo
                        text: "Use EXE"
                        state: "normal"
                        on_release: root.build_info()
                    ToggleButton:
                        id: tglInfoBootloader
                        text: "Bootloader"
                        state: "normal"
                        on_release: root.build_info()
                Button:
                    id: btnLaunchInfo
                    text: "Launch"
                    on_release:root.process_info()

        # PORTS
        FocusTabbedPanelItem:
            text: ' Ports '
            on_focus: if self.focus: root.got_focus_configuration(commButtonLayout)
            BoxLayout:
                orientation: "vertical"
                BoxLayout:
                    id: commButtonLayout
                    orientation: "horizontal"
                    on_kv_post: root.create_comm_buttons(commButtonLayout)
                BoxLayout:
                    Button:
                        text: "Refresh Available Ports"
                        on_release: root.create_comm_buttons(commButtonLayout)
                    Button:
                        text: "Clear Port"
                        on_release: root.clear_port()
